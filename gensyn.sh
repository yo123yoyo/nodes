channel_logo() {
    echo -e '\033[0;31m'
    echo -e '‚îå‚îê ‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚î¨‚îê‚î¨‚î¨ ‚î¨  ‚îå‚îÄ‚îê‚î¨ ‚î¨‚îå‚îê ‚î¨‚î¨  '
    echo -e '‚îú‚î¥‚îê‚îÇ ‚îÇ‚îÇ ‚î¨‚îú‚îÄ‚î§ ‚îÇ ‚îÇ‚îî‚î¨‚îò  ‚îî‚îÄ‚îê‚îî‚î¨‚îò‚îú‚î¥‚îê‚îÇ‚îÇ  '
    echo -e '‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚î¥ ‚î¥ ‚î¥ ‚î¥ ‚î¥   ‚îî‚îÄ‚îò ‚î¥ ‚îî‚îÄ‚îò‚î¥‚î¥‚îÄ‚îò'
    echo -e '\e[0m'
    echo -e "\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–∞–º—ã–π 4ekHyTbIu* –∫–∞–Ω–∞–ª –≤ –∫—Ä–∏–ø—Ç–µ @bogatiy_sybil [üí∏]"
}

download_node() {
    echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–æ–¥—ã.'
    
    cd $HOME
    
    sudo apt install lsof
    
    ports=(4040 3030 42763)
    
    for port in "${ports[@]}"; do
        if [[ $(lsof -i :"$port" | wc -l) -gt 0 ]]; then
            echo "–û—à–∏–±–∫–∞: –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ —Å–º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è."
            exit 1
        fi
    done
    
    echo -e "–í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã! –°–µ–π—á–∞—Å –Ω–∞—á–Ω–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞...\n"
    
    if [ -d "$HOME/rl-swarm" ]; then
        PID=$(netstat -tulnp | grep :3030 | awk '{print $7}' | cut -d'/' -f1)
        sudo kill $PID
        sudo rm -rf rl-swarm/
    fi
    
    TARGET_SWAP_GB=32
    CURRENT_SWAP_KB=$(free -k | awk '/Swap:/ {print $2}')
    CURRENT_SWAP_GB=$((CURRENT_SWAP_KB / 1024 / 1024))
    
    echo "–ù—ã–Ω–µ—à–Ω–∏–π —Ä–∞–∑–º–µ—Ä Swap: ${CURRENT_SWAP_GB}GB"
    if [ "$CURRENT_SWAP_GB" -lt "$TARGET_SWAP_GB" ]; then
        swapoff -a
        sed -i '/swap/d' /etc/fstab
        SWAPFILE=/swapfile
        fallocate -l ${TARGET_SWAP_GB}G $SWAPFILE
        chmod 600 $SWAPFILE
        mkswap $SWAPFILE
        swapon $SWAPFILE
        echo "$SWAPFILE none swap sw 0 0" >> /etc/fstab
        echo "vm.swappiness = 10" >> /etc/sysctl.conf
        sysctl -p
        echo "Swap –±—ã–ª –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ ${TARGET_SWAP_GB}GB"
    fi
    
    sudo apt update -y && sudo apt upgrade -y
    sudo apt install -y git curl wget build-essential python3 python3-venv python3-pip screen yarn net-tools
    
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt install -y nodejs
    sudo apt update
    curl -sSL https://raw.githubusercontent.com/zunxbt/installation/main/node.sh | bash
    
    git clone https://github.com/zunxbt/rl-swarm.git
    cd rl-swarm
    
    python3 -m venv .venv
    source .venv/bin/activate
    
    pip install --upgrade pip
    
    if screen -list | grep -q "gensynnode"; then
        screen -ls | grep gensynnode | cut -d. -f1 | awk '{print $1}' | xargs kill
    fi
    
    echo '–°–ª–µ–¥—É–π—Ç–µ –¥–∞–ª—å—à–µ –≥–∞–π–¥—É.'
}

launch_node() {
    cd $HOME
    
    cd rl-swarm
    source .venv/bin/activate
    
    if screen -list | grep -q "gensynnode"; then
        screen -ls | grep gensynnode | cut -d. -f1 | awk '{print $1}' | xargs kill
    fi
    
    screen -S gensynnode -d -m bash -c "trap '' INT; bash run_rl_swarm.sh 2>&1 | tee $HOME/rl-swarm/gensynnode.log"
    
    echo '–ù–æ–¥–∞ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞.'
}

watch_logs() {
    echo "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ (Ctrl+C –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é)..."
    trap 'echo -e "\n–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é..."; return' SIGINT
    tail -n 100 -f $HOME/rl-swarm/gensynnode.log
}

go_to_screen() {
    echo '–í–´–•–û–î–ò–¢–ï –ò–ó –õ–û–ì–û–í –ß–ï–†–ï–ó CTRL+A + D'
    sleep 2
    
    screen -r gensynnode
}

open_local_server() {
    npm install -g localtunnel
    
    SERVER_IP=$(curl -s https://api.ipify.org || curl -s https://ifconfig.co/ip || dig +short myip.opendns.com @resolver1.opendns.com)
    
    echo "–í–∞—à IP-–∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP. –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π IP? (y/n)"
    read -r CONFIRM
    
    if [[ $CONFIRM == "y" ]]; then
        echo "IP –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω: $SERVER_IP"
    else
        echo "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à IP-–∞–¥—Ä–µ—Å:"
        read -r SERVER_IP
        echo "–í—ã –≤–≤–µ–ª–∏ IP: $SERVER_IP"
    fi
    
    ssh -L 3030:localhost:3030 root@${SERVER_IP}
    lt --port 3030
}

userdata() {
    cd $HOME
    cat ~/rl-swarm/modal-login/temp-data/userData.json
}

userapikey() {
    cd $HOME
    cat ~/rl-swarm/modal-login/temp-data/userApiKey.json
}

update_node() {
    cd $HOME
    cd ~/rl-swarm
    
    cp swarm.pen $HOME/backup_swarm.pen
    
    git fetch origin
    git reset --hard origin/main
    git pull origin main
    
    echo '–ù–æ–¥–∞ –±—ã–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞.'
}

stop_node() {
    if screen -list | grep -q "gensynnode"; then
        screen -ls | grep gensynnode | cut -d. -f1 | awk '{print $1}' | xargs kill
    fi
    
    PID=$(netstat -tulnp | grep :3030 | awk '{print $7}' | cut -d'/' -f1)
    sudo kill $PID
    
    echo '–ù–æ–¥–∞ –±—ã–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.'
}

delete_node() {
    cd $HOME
    
    if screen -list | grep -q "gensynnode"; then
        screen -ls | grep gensynnode | cut -d. -f1 | awk '{print $1}' | xargs kill
    fi
    
    PID=$(netstat -tulnp | grep :3030 | awk '{print $7}' | cut -d'/' -f1)
    sudo kill $PID
    sudo rm -rf rl-swarm/
    
    echo '–ù–æ–¥–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.'
}

exit_from_script() {
    exit 0
}

while true; do
    channel_logo
    sleep 2
    echo -e "\n\n–ú–µ–Ω—é:"
    echo "1. ü§∫ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo "3. üìú –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
    echo "4. üñ•Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –≤ screen –Ω–æ–¥—ã"
    echo "5. üåê –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä"
    echo "6. üë§ –ü–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "7. üîë –ü–æ–∫–∞–∑–∞—Ç—å API –∫–ª—é—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "8. ‚úÖ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "9. ‚õî –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "10. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo "11. üëã –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice
    
    case $choice in
        1)
            download_node
        ;;
        2)
            launch_node
        ;;
        3)
            watch_logs
        ;;
        4)
            go_to_screen
        ;;
        5)
            open_local_server
        ;;
        6)
            userdata
        ;;
        7)
            userapikey
        ;;
        8)
            update_node
        ;;
        9)
            stop_node
        ;;
        10)
            delete_node
        ;;
        11)
            exit_from_script
        ;;
        *)
            echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
        ;;
    esac
done
