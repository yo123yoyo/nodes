#!/usr/bin/env bash

channel_logo() {
  echo -e '\033[0;31m'
  echo -e '‚îå‚îê ‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚î¨‚îê‚î¨‚î¨ ‚î¨  ‚îå‚îÄ‚îê‚î¨ ‚î¨‚îå‚îê ‚î¨‚î¨  '
  echo -e '‚îú‚î¥‚îê‚îÇ ‚îÇ‚îÇ ‚î¨‚îú‚îÄ‚î§ ‚îÇ ‚îÇ‚îî‚î¨‚îò  ‚îî‚îÄ‚îê‚îî‚î¨‚îò‚îú‚î¥‚îê‚îÇ‚îÇ  '
  echo -e '‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚î¥ ‚î¥ ‚î¥ ‚î¥ ‚î¥   ‚îî‚îÄ‚îò ‚î¥ ‚îî‚îÄ‚îò‚î¥‚î¥‚îÄ‚îò'
  echo -e '\e[0m'
  echo -e "\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–∞–º—ã–π 4ekHyTbIu* –∫–∞–Ω–∞–ª –≤ –∫—Ä–∏–ø—Ç–µ @bogatiy_sybil [üí∏]"
}

download_node() {
  if [ -f "wallet_hyperlane.json" ]; then
    echo "–ù–æ–¥–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –£–¥–∞–ª–∏—Ç–µ –Ω–æ–¥—É –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–Ω–æ–≤–æ"
    exit 1
  fi

  echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–æ–¥—ã...'

  cd /home/config/docker/docker-compose/go

  sudo apt-get update -y && sudo apt-get upgrade -y
  sudo apt-get install wget make tar screen nano build-essential unzip lz4 gcc git jq -y

  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.0/install.sh | bash

  export NVM_DIR="/home/config/docker/docker-compose/go/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

  eval "$(cat ~/.bashrc | tail -n +10)"

  nvm install 20

  if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
  else
    echo "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
  fi

  if ! command -v docker-compose &> /dev/null; then
    sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  else
    echo "Docker-Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
  fi

  curl -L https://foundry.paradigm.xyz | bash
  eval "$(cat ~/.bashrc | tail -n +10)"
  foundryup

  cast wallet new --json > wallet_hyperlane.json

  npm install -g @hyperlane-xyz/cli

  docker pull --platform linux/amd64 gcr.io/abacus-labs-dev/hyperlane-agent:agents-v1.0.0

  PRIVATE_KEY=$(jq -r '.[0].private_key' wallet_hyperlane.json)
  ADDRESS=$(jq -r '.[0].address' wallet_hyperlane.json)

  echo -e "–í–æ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–æ—à–µ–ª—å–∫–∞: "
  echo -e "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: $PRIVATE_KEY"
  echo -e "–ê–¥—Ä–µ—Å—Å –∫–æ—à–µ–ª—å–∫–∞: $ADDRESS"
  echo -e "–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ –≤ –º–æ–Ω–µ—Ç–µ ETH –≤ —Å–µ—Ç–∏ Base –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–ª–ª–∞—Ä–æ–≤"
}

run_validator() {
  FILE="wallet_hyperlane.json"

  CHAIN="base"
  NODE_NAME=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 8)
  PRIVATE_KEY=$(jq -r '.[0].private_key' wallet_hyperlane.json)
  
  while true; do
    read -p "–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à RPC –≤ Base Mainnet: " RPC_CHAIN
  
    if [[ $RPC_CHAIN == https://* ]]; then
      echo "–°—Å—ã–ª–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!"
      break
    else
      echo "–û—à–∏–±–∫–∞: —Å—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https://. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
    fi
  done

  jq --arg node_name "$NODE_NAME" '
    map(. + {node_name: $node_name})
  ' "$FILE" > "${FILE}.tmp"

  mv "${FILE}.tmp" "$FILE"

  mkdir -p /home/config/docker/docker-compose/go/hyperlane_db_$CHAIN
  chmod -R 777 /home/config/docker/docker-compose/go/hyperlane_db_$CHAIN

  docker run -d \
    -it \
    --name hyperlane \
    --mount type=bind,source=/home/config/docker/docker-compose/go/hyperlane_db_$CHAIN,target=/hyperlane_db_$CHAIN \
    gcr.io/abacus-labs-dev/hyperlane-agent:agents-v1.0.0 \
    ./validator \
    --db /hyperlane_db_$CHAIN \
    --originChainName $CHAIN \
    --reorgPeriod 1 \
    --validator.id $NODE_NAME \
    --checkpointSyncer.type localStorage \
    --checkpointSyncer.folder $CHAIN \
    --checkpointSyncer.path /hyperlane_db_$CHAIN/$CHAIN_checkpoints \
    --validator.key $PRIVATE_KEY \
    --chains.$CHAIN.signer.key $PRIVATE_KEY \
    --chains.$CHAIN.customRpcUrls $RPC_CHAIN
}

check_wallet() {
  PRIVATE_KEY=$(jq -r '.[0].private_key' wallet_hyperlane.json)
  ADDRESS=$(jq -r '.[0].address' wallet_hyperlane.json)

  echo -e "–í–æ—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–æ—à–µ–ª—å–∫–∞: "
  echo -e "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: $PRIVATE_KEY"
  echo -e "–ê–¥—Ä–µ—Å—Å –∫–æ—à–µ–ª—å–∫–∞: $ADDRESS"
}

check_logs() {
  docker logs -f hyperlane --tail 300
}

restart_node() {
  docker restart hyperlane

  echo '–ù–æ–¥—ã –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.'
}

delete_node() {
  read -p '–ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É, –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É (CTRL+C —á—Ç–æ–±—ã –≤—ã–π—Ç–∏): ' checkjust

  echo '–ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª—è—Ç—å –Ω–æ–¥—É...'

  cd /home/config/docker/docker-compose/go

  docker stop hyperlane
  docker rm hyperlane

  sudo rm -r hyperlane_db_base/
  rm wallet_hyperlane.json

  echo "–ù–æ–¥–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞."
}

exit_from_script() {
  exit 0
}

while true; do
    channel_logo
    sleep 2
    echo -e "\n\n–ú–µ–Ω—é:"
    echo "1. üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2. ‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–∞"
    echo "3. üëÅÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç –∫–æ—à–µ–ª—å–∫–∞"
    echo "4. üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ (–≤—ã–π—Ç–∏ CTRL+C)"
    echo "5. üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
    echo "6. ‚ùå –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo -e "7. üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞\n"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

    case $choice in
      1)
        download_node
        ;;
      2)
        run_validator
        ;;
      3)
        check_wallet
        ;;
      4)
        check_logs
        ;;
      5)
        restart_node
        ;;
      6)
        delete_node
        ;;
      7)
        exit_from_script
        ;;
      *)
        echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
        ;;
    esac
  done
