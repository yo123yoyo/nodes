#!/bin/bash

channel_logo() {
  echo -e '\033[0;31m'
  echo -e '‚îå‚îê ‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚îÄ‚îê‚îå‚î¨‚îê‚î¨‚î¨ ‚î¨  ‚îå‚îÄ‚îê‚î¨ ‚î¨‚îå‚îê ‚î¨‚î¨  '
  echo -e '‚îú‚î¥‚îê‚îÇ ‚îÇ‚îÇ ‚î¨‚îú‚îÄ‚î§ ‚îÇ ‚îÇ‚îî‚î¨‚îò  ‚îî‚îÄ‚îê‚îî‚î¨‚îò‚îú‚î¥‚îê‚îÇ‚îÇ  '
  echo -e '‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚îî‚îÄ‚îò‚î¥ ‚î¥ ‚î¥ ‚î¥ ‚î¥   ‚îî‚îÄ‚îò ‚î¥ ‚îî‚îÄ‚îò‚î¥‚î¥‚îÄ‚îò'
  echo -e '\e[0m'
  echo -e "\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ —Å–∞–º—ã–π 4ekHyTbIu* –∫–∞–Ω–∞–ª –≤ –∫—Ä–∏–ø—Ç–µ @bogatiy_sybil [üí∏]"
}

download_node() {
  if [ -d "/home/config/docker/docker-compose/go/privasea" ]; then
    echo "–ü–∞–ø–∫–∞ privasea —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£–¥–∞–ª–∏—Ç–µ –Ω–æ–¥—É –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–Ω–æ–≤–æ. –í—ã—Ö–æ–¥..."
    return 0
  fi

  echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...'

  cd /home/config/docker/docker-compose/go

  sudo apt update -y && sudo apt upgrade -y
  sudo apt-get install nano git gnupg lsb-release apt-transport-https jq screen ca-certificates curl -y

  if ! command -v docker &> /dev/null; then
    curl -fsSL https://get.docker.com -o get-docker.sh
    sudo sh get-docker.sh
    sudo usermod -aG docker $USER
    rm get-docker.sh
  else
    echo "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
  fi

  if ! command -v docker-compose &> /dev/null; then
    sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
  else
    echo "Docker-Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º"
  fi

  docker pull privasea/acceleration-node-beta

  mkdir -p /home/config/docker/docker-compose/go/privasea/config && cd /home/config/docker/docker-compose/go/privasea

  docker run -it -v "/home/config/docker/docker-compose/go/privasea/config:/app/config"  \
    privasea/acceleration-node-beta:latest ./node-calc new_keystore

  cd /home/config/docker/docker-compose/go/privasea/config

  name_file=$(ls)

  mv ./$name_file ./wallet_keystore

  echo '–°–ª–µ–¥—É–π—Ç–µ –¥–∞–ª—å—à–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ –≥–∞–π–¥–µ.'
}

launch_node() {
  read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–æ–∑–¥–∞–ª–∏ –¥–ª—è –Ω–æ–¥—ã: " NODE_PASSWORD

  cd /home/config/docker/docker-compose/go/privasea/

  docker run -d -v "/home/config/docker/docker-compose/go/privasea/config:/app/config" \
    -e KEYSTORE_PASSWORD=$NODE_PASSWORD \
    privasea/acceleration-node-beta:latest
}

check_wallet() {
  cd /home/config/docker/docker-compose/go/privasea/config

  ADDRESS=$(jq -r '.address' wallet_keystore)
  echo "–í–∞—à –∞–¥—Ä–µ—Å: 0x$ADDRESS"
}

check_logs() {
  docker logs --tail 100 $(docker ps --filter "ancestor=privasea/acceleration-node-beta:latest" --filter "status=running" --format "{{.ID}}")
}

restart_node() {
  RUNNING_CONTAINER=$(docker ps --filter "ancestor=privasea/acceleration-node-beta:latest" --filter "status=running" --format "{{.ID}}")

  if [ ! -z "$RUNNING_CONTAINER" ]; then
      echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ä–∞–±–æ—Ç–∞—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
      docker restart $RUNNING_CONTAINER
  else
      EXITED_CONTAINER=$(docker ps --filter "ancestor=privasea/acceleration-node-beta:latest" --filter "status=exited" --format "{{.ID}}" --latest)
      
      if [ ! -z "$EXITED_CONTAINER" ]; then
          echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
          docker restart $EXITED_CONTAINER
      else
          echo "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
      fi
  fi
}

stop_node() {
  docker stop $(docker ps --filter "ancestor=privasea/acceleration-node-beta:latest" --filter "status=running" --format "{{.ID}}")
}

delete_node() {
  read -p '–ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É, –≤–≤–µ–¥–∏—Ç–µ –ª—é–±—É—é –±—É–∫–≤—É (CTRL+C —á—Ç–æ–±—ã –≤—ã–π—Ç–∏): ' checkjust

  echo '–ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª—è—Ç—å –Ω–æ–¥—É...'

  container_id=$(docker ps --filter "ancestor=privasea/acceleration-node-beta:latest" --filter "status=running" --format "{{.ID}}")

  docker stop $container_id
  docker rm $container_id

  cd /home/config/docker/docker-compose/go

  sudo rm -r privasea/

  echo '–ù–æ–¥–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.'
}

exit_from_script() {
  exit 0
}

while true; do
    channel_logo
    sleep 2
    echo -e "\n\n–ú–µ–Ω—é:"
    echo "1. ‚öôÔ∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "2. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo "3. üëõ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"
    echo "4. üìú –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏"
    echo "5. üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo "6. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo "7. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
    echo "8. üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞"
    echo -e "\n"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

    case $choice in
      1)
        download_node
        ;;
      2)
        launch_node
        ;;
      3)
        check_wallet
        ;;
      4)
        check_logs
        ;;
      5)
        restart_node
        ;;
      6)
        stop_node
        ;;
      7)
        delete_node
        ;;
      8)
        exit_from_script
        ;;
      *)
        echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
        ;;
    esac
done
